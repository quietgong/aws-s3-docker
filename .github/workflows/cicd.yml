name: CI-CD

on:
  push:
    branches: [ "main" ]  # main 브랜치에 push될 때 파이프라인 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 리포지토리 체크아웃
      - name: Check out source code
        uses: actions/checkout@v3

      # 2) JDK 세팅 (예: Java 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # 3) 빌드 (Gradle 예시)
      - name: Build
        run: ./gradlew clean build

      # 4) 테스트
      - name: Test
        run: ./gradlew test

      # 5) Docker 이미지 빌드 및 푸시 (선택)
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/aws-s3:latest .
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/aws-s3:latest

      # 6) 서버에 SSH 접속해 배포 (선택)
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/aws-s3:latest
            docker stop aws-s3 || true
            docker rm aws-s3 || true
            docker run -d -p 8080:8080 --name aws-s3 ${{ secrets.DOCKER_HUB_USERNAME }}/aws-s3:latest

name: CI-CD

on:
  push:
    branches: [ "main" ]  # main 브랜치에 push될 때 파이프라인 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 리포지토리 체크아웃
      - name: Check out source code
        uses: actions/checkout@v3

      # 2) JDK 세팅 (예: Java 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # 3) 빌드 (Gradle 예시)
      - name: Build
        run: ./gradlew clean build -x test

      # 5) Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest .
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest

      # 6) 서버에 SSH 접속해 배포
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest
            docker stop ${{ secrets.PROJECT_NAME }} || true
            docker rm ${{ secrets.PROJECT_NAME }} || true
            docker run -d -p 5000:8080 
            -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} 
            -e AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
            -e MYSQL_ENDPOINT=${{secrets.MYSQL_ENDPOINT}}
            -e MYSQL_USER=${{secrets.MYSQL_USER}}
            -e MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD}}
            --name ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest
